<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxx.example.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.xxx.example.po.User">
        <id column="n_id" jdbcType="INTEGER" property="id"/>
        <result column="c_username" jdbcType="VARCHAR" property="username"/>
        <result column="c_password" jdbcType="VARCHAR" property="password"/>
        <result column="c_mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="c_email" jdbcType="VARCHAR" property="email"/>
        <result column="t_create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="t_update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        n_id, c_username, c_password, c_mobile, c_email, t_create_time, t_update_time
    </sql>
    <select id="selectByExample" parameterType="com.xxx.example.po.UserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ex_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ex_user
        where n_id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from ex_user
        where n_id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.xxx.example.po.UserExample">
        delete from ex_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.xxx.example.po.User">
        insert into ex_user (n_id, c_username, c_password,
        c_mobile, c_email, t_create_time,
        t_update_time)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
        #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.xxx.example.po.User">
        insert into ex_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                n_id,
            </if>
            <if test="username != null">
                c_username,
            </if>
            <if test="password != null">
                c_password,
            </if>
            <if test="mobile != null">
                c_mobile,
            </if>
            <if test="email != null">
                c_email,
            </if>
            <if test="createTime != null">
                t_create_time,
            </if>
            <if test="updateTime != null">
                t_update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xxx.example.po.UserExample" resultType="java.lang.Long">
        select count(*) from ex_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update ex_user
        <set>
            <if test="record.id != null">
                n_id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.username != null">
                c_username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                c_password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.mobile != null">
                c_mobile = #{record.mobile,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                c_email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                t_create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                t_update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update ex_user
        set n_id = #{record.id,jdbcType=INTEGER},
        c_username = #{record.username,jdbcType=VARCHAR},
        c_password = #{record.password,jdbcType=VARCHAR},
        c_mobile = #{record.mobile,jdbcType=VARCHAR},
        c_email = #{record.email,jdbcType=VARCHAR},
        t_create_time = #{record.createTime,jdbcType=TIMESTAMP},
        t_update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xxx.example.po.User">
        update ex_user
        <set>
            <if test="username != null">
                c_username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                c_password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                c_mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                c_email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                t_create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                t_update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where n_id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xxx.example.po.User">
        update ex_user
        set c_username = #{username,jdbcType=VARCHAR},
        c_password = #{password,jdbcType=VARCHAR},
        c_mobile = #{mobile,jdbcType=VARCHAR},
        c_email = #{email,jdbcType=VARCHAR},
        t_create_time = #{createTime,jdbcType=TIMESTAMP},
        t_update_time = #{updateTime,jdbcType=TIMESTAMP}
        where n_id = #{id,jdbcType=INTEGER}
    </update>
    <select id="findAll" resultType="com.xxx.example.po.User">
        SELECT * from ex_user ;
    </select>
</mapper>